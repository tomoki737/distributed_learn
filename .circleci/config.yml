version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@8.1
  aws-ecs: circleci/aws-ecs@3.2

executors:
  docker_build:
    machine:
      docker_layer_caching: true
jobs:
  build:
    docker:
      - image: circleci/php:8-node-browsers
      - image: circleci/mysql:8.0
        environment:
          MYSQL_DATABASE: larasns
          MYSQL_USER: default
          MYSQL_PASSWORD: secret
          APP_KEY: ${APP_KEY}
    environment:
      APP_ENV: testing
      DB_CONNECTION: mysql
      DB_HOST: localhost
      DB_PORT: 3306
      DB_DATABASE: larasns
      DB_USERNAME: default
      DB_PASSWORD: secret
    steps:
      - checkout
      - run: sudo composer self-update --1
      - run: pwd
      - restore_cache:
          key: composer-v1-{{ checksum "./src/composer.lock" }}
      - run:
          name: composer install
          command: |
            cd src/
            composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "./src/composer.lock" }}
          paths:
            - vendor
      - restore_cache:
          key: npm-v1-{{ checksum "./src/package-lock.json" }}
      - run:
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              cd src/
              npm ci
            fi
      - save_cache:
          key: npm-v1-{{ checksum "./src/package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: npm run dev
          command: |
            cd src/
            npm run dev
      - run:
          name: php test
          command: |
            cd src/
            php artisan test
      - run:
          name: vue test
          command: |
            cd src/
            npm test
workflows:
  build-and-deploy:
    jobs:
      - build
      - aws-ecr/build-and-push-image:
          name: "php"
          executor: docker_build
          registry-id: AWS_ECR_REGISTRY_ID
          region: "ap-northeast-1"
          repo: "php"
          tag: "${CIRCLE_SHA1}"
          dockerfile: ./docker/php/Dockerfile
          requires:
            - build
          filters:
            branches:
              only:
                - main

      - aws-ecr/build-and-push-image:
          name: "nginx"
          executor: docker_build
          registry-id: AWS_ECR_REGISTRY_ID
          region: "ap-northeast-1"
          repo: "nginx"
          tag: "${CIRCLE_SHA1}"
          dockerfile: ./docker/nginx/Dockerfile
          requires:
            - build
          filters:
            branches:
              only:
                - main

      - aws-ecs/deploy-service-update:
          family: "distributed_learn_task_definition"
          service-name: "distributed_learn"
          cluster: "distributed_learn_cluster"
          container-image-name-updates: "container=php,image-and-tag=${AWS_ECR_ACCOUNT_URL}/php:${CIRCLE_SHA1},container=nginx,image-and-tag=${AWS_ECR_ACCOUNT_URL}/nginx:${CIRCLE_SHA1}"
          requires:
            - php
            - nginx
          filters:
            branches:
              only:
                - main
