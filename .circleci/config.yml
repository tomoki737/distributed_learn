version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@1.0.0
  aws-ecs: circleci/aws-ecs@0.0.6

executors:
  docker_build:
    machine:
      docker_layer_caching: true

workflows:
  build-and-deploy:
    jobs:
      - test:
          docker:
            - image: circleci/php:8-node-browsers
            - image: circleci/postgres:11.6-alpine
              environment:
                POSTGRES_DB: larasns
                POSTGRES_USER: default
                POSTGRES_PASSWORD: secret
                APP_KEY: ${APP_KEY}
          environment:
            APP_ENV: testing
            DB_CONNECTION: pgsql
            DB_HOST: localhost
            DB_PORT: 5432
            DB_DATABASE: larasns
            DB_USERNAME: default
            DB_PASSWORD: secret
          steps:
            - checkout
            - run: sudo composer self-update --1
            - run: pwd
            - restore_cache:
                key: composer-v1-{{ checksum "./src/composer.lock" }}
            - run:
                name: composer install
                command: |
                  cd src/
                  composer install -n --prefer-dist
            - save_cache:
                key: composer-v1-{{ checksum "./src/composer.lock" }}
                paths:
                  - vendor
            - restore_cache:
                key: npm-v1-{{ checksum "./src/package-lock.json" }}
            - run:
                name: npm ci
                command: |
                  if [ ! -d node_modules ]; then
                    cd src/
                    npm ci
                  fi
            - save_cache:
                key: npm-v1-{{ checksum "./src/package-lock.json" }}
                paths:
                  - node_modules
            - run:
                name: npm run dev
                command: |
                  cd src/
                  npm run dev
            - run:
                name: get ready for postgres
                command: |
                  sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4EB27DB2A3B88B8B
                  sudo apt-get update
                  sudo apt-get install libpq-dev
                  sudo docker-php-ext-install pdo_pgsql
                  dockerize -wait tcp://localhost:5432 -timeout 1m
            - run:
                name: php test
                command: |
                  cd src/
                  php artisan test

      - aws-ecr/build_and_push_image:
          executor: docker_build
          name: 'build-staging'
          account-url: ${AWS_ECR_ACCOUNT_URL}
          region: ${AWS_REGION}
          repo: 'php'
          tag: "${CIRCLE_SHA1}"
          path: ./
          dockerfile: ./docker/php/Dockerfile
          filters:
            branches:
              only:
                - main
      - aws-ecs/deploy_service-update:
          requires:
            - build-staging
          family: 'distributed_learn_task_definition'
          service-name: 'distributed-learn-service'
          cluster-name: 'distributed-learn-cluster'
          container-image-name-updates: 'container=php,image-and-tag=${AWS_ECR_ACCOUNT_URL}/php:${CIRCLE_SHA1},container=nginx,image-and-tag=${AWS_ECR_ACCOUNT_URL}/nginx:${CIRCLE_SHA1}'
          filters:
            branches:
              only:
                - main

